/*
 * opencode
 *
 * opencode api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AgentPermission {
    #[serde(rename = "edit")]
    pub edit: Box<models::AgentPermissionEdit>,
    #[serde(rename = "bash")]
    pub bash: std::collections::HashMap<String, models::AgentPermissionEdit>,
    #[serde(rename = "webfetch", skip_serializing_if = "Option::is_none")]
    pub webfetch: Option<Box<models::AgentPermissionEdit>>,
}

impl AgentPermission {
    pub fn new(edit: models::AgentPermissionEdit, bash: std::collections::HashMap<String, models::AgentPermissionEdit>) -> AgentPermission {
        AgentPermission {
            edit: Box::new(edit),
            bash,
            webfetch: None,
        }
    }
}

