/*
 * opencode
 *
 * opencode api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConfigLspValue {
    #[serde(rename = "disabled")]
    pub disabled: bool,
    #[serde(rename = "command")]
    pub command: Vec<String>,
    #[serde(rename = "extensions", skip_serializing_if = "Option::is_none")]
    pub extensions: Option<Vec<String>>,
    #[serde(rename = "env", skip_serializing_if = "Option::is_none")]
    pub env: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "initialization", skip_serializing_if = "Option::is_none")]
    pub initialization: Option<std::collections::HashMap<String, serde_json::Value>>,
}

impl ConfigLspValue {
    pub fn new(disabled: bool, command: Vec<String>) -> ConfigLspValue {
        ConfigLspValue {
            disabled,
            command,
            extensions: None,
            env: None,
            initialization: None,
        }
    }
}

