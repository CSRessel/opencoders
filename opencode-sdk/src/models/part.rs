/*
 * opencode
 *
 * opencode api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "type")]
pub enum Part {
    #[serde(rename="text")]
    Text(Box<models::TextPart>),
    #[serde(rename="reasoning")]
    Reasoning(Box<models::ReasoningPart>),
    #[serde(rename="file")]
    File(Box<models::FilePart>),
    #[serde(rename="tool")]
    Tool(Box<models::ToolPart>),
    #[serde(rename="step-start")]
    StepStart(Box<models::StepStartPart>),
    #[serde(rename="step-finish")]
    StepFinish(Box<models::StepFinishPart>),
    #[serde(rename="snapshot")]
    Snapshot(Box<models::SnapshotPart>),
    #[serde(rename="patch")]
    Patch(Box<models::PatchPart>),
    #[serde(rename="agent")]
    Agent(Box<models::AgentPart>),
}

impl Default for Part {
    fn default() -> Self {
        Self::Text(Default::default())
    }
}


