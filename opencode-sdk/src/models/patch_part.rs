/*
 * opencode
 *
 * opencode api
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PatchPart {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "sessionID")]
    pub session_id: String,
    #[serde(rename = "messageID")]
    pub message_id: String,
    #[serde(rename = "hash")]
    pub hash: String,
    #[serde(rename = "files")]
    pub files: Vec<String>,
}

impl PatchPart {
    pub fn new(
        id: String,
        session_id: String,
        message_id: String,
        _type: Type,
        hash: String,
        files: Vec<String>,
    ) -> PatchPart {
        PatchPart {
            id,
            session_id,
            message_id,
            hash,
            files,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "patch")]
    Patch,
}

impl Default for Type {
    fn default() -> Type {
        Self::Patch
    }
}
