/*
 * opencode
 *
 * opencode api
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolPart {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "sessionID")]
    pub session_id: String,
    #[serde(rename = "messageID")]
    pub message_id: String,
    #[serde(rename = "callID")]
    pub call_id: String,
    #[serde(rename = "tool")]
    pub tool: String,
    #[serde(rename = "state")]
    pub state: Box<models::ToolState>,
}

impl ToolPart {
    pub fn new(
        id: String,
        session_id: String,
        message_id: String,
        _type: Type,
        call_id: String,
        tool: String,
        state: models::ToolState,
    ) -> ToolPart {
        ToolPart {
            id,
            session_id,
            message_id,
            call_id,
            tool,
            state: Box::new(state),
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "tool")]
    Tool,
}

impl Default for Type {
    fn default() -> Type {
        Self::Tool
    }
}
