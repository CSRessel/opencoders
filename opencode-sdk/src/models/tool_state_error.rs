/*
 * opencode
 *
 * opencode api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolStateError {
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(rename = "input")]
    pub input: std::collections::HashMap<String, serde_json::Value>,
    #[serde(rename = "error")]
    pub error: String,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "time")]
    pub time: Box<models::ToolStateCompletedTime>,
}

impl ToolStateError {
    pub fn new(status: Status, input: std::collections::HashMap<String, serde_json::Value>, error: String, time: models::ToolStateCompletedTime) -> ToolStateError {
        ToolStateError {
            status,
            input,
            error,
            metadata: None,
            time: Box::new(time),
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "error")]
    Error,
}

impl Default for Status {
    fn default() -> Status {
        Self::Error
    }
}

