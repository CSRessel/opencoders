/*
 * opencode
 *
 * opencode api
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserMessage {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "sessionID")]
    pub session_id: String,
    #[serde(rename = "time")]
    pub time: Box<models::UserMessageTime>,
}

impl UserMessage {
    pub fn new(
        id: String,
        session_id: String,
        _role: Role,
        time: models::UserMessageTime,
    ) -> UserMessage {
        UserMessage {
            id,
            session_id,
            time: Box::new(time),
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Role {
    #[serde(rename = "user")]
    User,
}

impl Default for Role {
    fn default() -> Role {
        Self::User
    }
}
