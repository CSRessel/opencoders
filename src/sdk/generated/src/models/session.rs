/*
 * opencode
 *
 * opencode api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Session {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "parentID", skip_serializing_if = "Option::is_none")]
    pub parent_id: Option<String>,
    #[serde(rename = "share", skip_serializing_if = "Option::is_none")]
    pub share: Option<Box<models::SessionShare>>,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "version")]
    pub version: String,
    #[serde(rename = "time")]
    pub time: Box<models::SessionTime>,
    #[serde(rename = "revert", skip_serializing_if = "Option::is_none")]
    pub revert: Option<Box<models::SessionRevert>>,
}

impl Session {
    pub fn new(id: String, title: String, version: String, time: models::SessionTime) -> Session {
        Session {
            id,
            parent_id: None,
            share: None,
            title,
            version,
            time: Box::new(time),
            revert: None,
        }
    }
}

